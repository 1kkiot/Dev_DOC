#include <linux/module.h> //最基本的文件，支持动态添加和卸载模块。Hello World驱动要这一个文件就可以了

#include <linux/fs.h> //包含了文件操作相关struct的定义，例如大名鼎鼎的structfile_operations

 

//包含了struct inode 的定义，MINOR、MAJOR的头文件。

#include <linux/errno.h> //包含了对返回值的宏定义，这样用户程序可以用perror输出错误信息。

#include <linux/types.h> //对一些特殊类型的定义，例如dev_t,off_t, pid_t.其实这些类型大部分都是unsigned int型通过一连串的typedef变过来的，只是为了方便阅读。

#include <linux/cdev.h> //对字符设备结构cdev以及一系列的操作函数的定义。//包含了cdev 结构及相关函数的定义。

#include <linux/wait.h> //等代队列相关头文件//内核等待队列，它包含了自旋锁的头文件

 

#include <linux/init.h>

#include <linux/kernel.h>

 

#include <linux/slab.h> //包含了kcalloc、kzalloc内存分配函数的定义。

#include <linux/uaccess.h> //包含了copy_to_user、copy_from_user等内核访问用户进程内存地址的函数定义。

#include <linux/device.h> //包含了device、class 等结构的定义

#include <linux/io.h> //包含了ioremap、iowrite等内核访问IO内存等函数的定义。

#include <linux/miscdevice.h> //包含了miscdevice结构的定义及相关的操作函数。

#include <linux/interrupt.h> //使用中断必须的头文件

#include <mach/irqs.h> //使用中断必须的头文件

#include <asm/bitops.h> //包含set_bit等位操作函数，实现Input子系统时可用。

#include <linux/semaphore.h> //使用信号量必须的头文件

#include <linux/spinlock.h> //自旋锁

 

#include <linux/sched.h> //内核等待队列中要使用的TASK_NORMAL、TASK_INTERRUPTIBLE包含在这个头文件

#include <linux/kfifo.h> //fifo环形队列

#include <linux/timer.h> //内核定时器

#include <linux/input.h> //中断处理